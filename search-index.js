var searchIndex={};
searchIndex["maybe_unwind"] = {"doc":"A wrapper of [`catch_unwind`] that also captures the panic…","i":[[3,"Location","maybe_unwind","The information about the location of an unwinding panic.",null,null],[3,"Unwind","","The captured information about an unwinding panic.",null,null],[3,"MaybeUnwind","","A future for the [`maybe_unwind`] method.",null,null],[5,"capture_panic_info","","Capture the panic information.",null,[[["panicinfo"]],["bool"]]],[5,"maybe_unwind","","Invokes a closure, capturing the cause of an unwinding…",null,[[["f"]],[["result",["unwind"]],["unwind"]]]],[5,"reset_hook","","Unregisters the custom panic hook and reset the previous…",null,[[]]],[5,"set_hook","","Registers the custom panic hook so that the panic…",null,[[]]],[11,"payload","","Return the payload associated with the captured panic.",0,[[["self"]],["any"]]],[11,"payload_str","","Return the string representation of the panic payload.",0,[[["self"]],["str"]]],[11,"into_payload","","Convert itself into a trait object of the panic payload.",0,[[],[["any"],["box",["any"]]]]],[11,"location","","Return the information about the location from which the…",0,[[["self"]],[["location"],["option",["location"]]]]],[11,"backtrace","","Return the captured backtrace for the panic.",0,[[["self"]],[["option",["backtrace"]],["backtrace"]]]],[11,"file","","Return the name of the source file from which the panic…",1,[[["self"]],["str"]]],[11,"line","","Return the line number from which the panic originated.",1,[[["self"]],["u32"]]],[11,"column","","Return the column from which the panic originated.",1,[[["self"]],["u32"]]],[8,"FutureMaybeUnwindExt","","An extension trait for `Future`s that provides an adaptor…",null,null],[11,"maybe_unwind","","Catches unwinding panics while polling the future.",2,[[],["maybeunwind"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"try_poll","","",3,[[["context"],["f"],["pin"]],["poll"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"poll","","",3,[[["pin"],["self"],["context"]],["poll"]]],[11,"drop","","",3,[[["pin"],["self"]]]],[11,"maybe_unwind","","Catches unwinding panics while polling the future.",2,[[],["maybeunwind"]]]],"p":[[3,"Unwind"],[3,"Location"],[8,"FutureMaybeUnwindExt"],[3,"MaybeUnwind"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);